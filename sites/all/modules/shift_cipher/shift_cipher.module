<?php

/*
** Basic menu setup:
** Creates a menu link to the module form and success/results page.
*/
function shift_cipher_menu() {
    $items['shift_cipher'] = array(
        'title' => 'Shift Cipher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('shift_cipher_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );

    $items['shift_cipher_success_page'] = array(
        'title' => 'Success',
        'page callback' => 'shift_cipher_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

/*
** Module form setup:
*/
function shift_cipher_form() {
    $form['shift_value'] = array(
        '#title' => 'Shift Value',
        '#type' => 'textfield',
        '#description' => t('How many places would you like to shift?'),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_integer_positive'),
    );

    $form['shift_direction'] = array(
        '#title' => 'Shift Direction',
        '#type' => 'textfield',
        '#description' => t('Which direction would you like to shift?'),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_shift_direction'),
    );

    $form['message'] = array(
        '#title' => 'Message',
        '#type' => 'textfield',
        '#description' => t('Write your message here.'),
        '#required' => TRUE,
        '#element_validate' => array('element_validate_message_field'),
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Encrypt!',
    );

    return $form;
}

/*
** Custom form field validation:
*/
function element_validate_shift_direction($element, $form_state) {
    $shift_direction = strtolower($form_state['values']['shift_direction']);
    if ($shift_direction != 'left' && $shift_direction != 'right') {
        form_error($element, t("Please enter either 'left' or 'right' as a direction."));
    }
}

function element_validate_message_field($element, $form_state) {
    $message = str_split($form_state['values']['message']);
    foreach ($message as $letter) {
        if (ctype_digit($letter)) {
            form_error($element, t("Please enter only letters, spaces, or punctuation."));
        }
    }
}

/*
** Functions called on submit:
** Translates the message using the shift cipher.
*/
function shift_cipher_form_submit($form, &$form_state) {
    //Get values from form:
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = strtolower($form_state['values']['shift_direction']);
    $message = $form_state['values']['message'];

    //Invert shift_value if direction is left.
    if(strtolower($shift_direction) == "left") {
        $shift_value = $shift_value * -1;
    }

    $alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');

    //Lower case and split string for manipulation:
    $lower_case_message = strtolower($message);
    $split_message = str_split($lower_case_message, 1);

    //Loop through message
    foreach($split_message as &$letter) {
        // replacing only letters and ignoring spaces/punctuation.
        if(in_array($letter, $alphabet)) {
            $index = array_search($letter, $alphabet) + $shift_value;
            //If shift_value takes $index beyond length of $alphabet in either direction, return to beginning or end as needed...
            if($index > 25) {
                $index = $index - 26;
            } elseif($index < 0) {
                $index = $index + 26;
            //...otherwise, simply replace the letter according to shift_value.
            } else {
                $letter = $alphabet[$index];
            }
        }
    }

    //Implode array, making it a string again.
    $encrypted = implode('', $split_message);

    $_SESSION['shift_cipher_output'] = $encrypted;
    $form_state['redirect'] = 'shift_cipher_success_page';
}

function shift_cipher_success() {
    $encrypted = $_SESSION['shift_cipher_output'];
    return $encrypted;
}
